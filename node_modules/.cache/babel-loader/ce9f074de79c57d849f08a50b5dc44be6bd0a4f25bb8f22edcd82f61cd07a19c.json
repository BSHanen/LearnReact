{"ast":null,"code":"var _jsxFileName = \"/home/hanen/React/learnreact/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      number: 0\n    };\n    // pour chaque elements utiliser entre constructor et render il faut le declarer \n    // dans le consctuctor de cette maniere \n    this.OnClickEvent = this.OnClickEvent.bind(this);\n  }\n  OnClickEvent() {\n    this.setState(prevState => {\n      // setState fonction predefinie dans la classe Components \n      // qui prends et  modifier la valeur du state declarer dans le Constructor directement et de facon gnrl\n      return {\n        number: prevState.number + 1\n      }; // entre {} car c du JS\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn primary\",\n        onClick: this.OnClickEvent,\n        children: \"Click Me to increment ! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","state","number","OnClickEvent","bind","setState","prevState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick"],"sources":["/home/hanen/React/learnreact/src/components/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = { number : 0}\n        // pour chaque elements utiliser entre constructor et render il faut le declarer \n        // dans le consctuctor de cette maniere \n        this.OnClickEvent = this.OnClickEvent.bind(this);\n    }\n    OnClickEvent(){\n       this.setState(prevState => { // setState fonction predefinie dans la classe Components \n        // qui prends et  modifier la valeur du state declarer dans le Constructor directement et de facon gnrl\n        return { number : prevState.number + 1 } // entre {} car c du JS\n       })\n    }\n    render(){\n\n        return(\n            <div>\n                <h1>{ this.state.number}</h1>\n    \n            <button  className = \"btn primary\" onClick={this.OnClickEvent}>Click Me to increment ! </button>\n            </div>\n        )\n    }\n}\nexport default App ;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,SAASH,SAAS,CAAC;EACxBI,WAAWA,CAAA,EAAE;IACT,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MAAEC,MAAM,EAAG;IAAC,CAAC;IAC1B;IACA;IACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EACpD;EACAD,YAAYA,CAAA,EAAE;IACX,IAAI,CAACE,QAAQ,CAACC,SAAS,IAAI;MAAE;MAC5B;MACA,OAAO;QAAEJ,MAAM,EAAGI,SAAS,CAACJ,MAAM,GAAG;MAAE,CAAC,EAAC;IAC1C,CAAC,CAAC;EACL;;EACAK,MAAMA,CAAA,EAAE;IAEJ,oBACIT,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAM,IAAI,CAACP,KAAK,CAACC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAEjCd,OAAA;QAASe,SAAS,EAAG,aAAa;QAACC,OAAO,EAAE,IAAI,CAACX,YAAa;QAAAK,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1F;EAEd;AACJ;AACA,eAAeb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}