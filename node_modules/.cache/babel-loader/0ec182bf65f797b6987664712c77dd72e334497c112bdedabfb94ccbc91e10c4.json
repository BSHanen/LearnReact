{"ast":null,"code":"var _jsxFileName = \"/home/hanen/React/learnreact/src/components/Team.js\";\nimport React, { Component } from \"react\";\nimport TeamMember from \"./TeamMember\";\nimport InfoMembers from \"./InfoMembers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Team extends Component {\n  constructor() {\n    super();\n    this.state = {\n      info: InfoMembers\n    };\n  }\n  // lebut du mapping c de generaliser le code en cas davoir plusiers MAPS\n  // C'est une simple fct qui fait convertir une liste dinfo en une Map et la fait comme return\n  mapping(x) {\n    const members = x.map(member => /*#__PURE__*/_jsxDEV(TeamMember //member est un parametre qui represente chaque ligne dans la MAP\n    // C le principe des boucles     \n    , {\n      img: member.img,\n      name: member.name,\n      position: member.position,\n      phone: member.phone,\n      mail: member.email,\n      website: member.website\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 37\n    }, this));\n    return members;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.mapping(this.state.info)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default Team;","map":{"version":3,"names":["React","Component","TeamMember","InfoMembers","jsxDEV","_jsxDEV","Team","constructor","state","info","mapping","x","members","map","member","img","name","position","phone","mail","email","website","id","fileName","_jsxFileName","lineNumber","columnNumber","render","className","children"],"sources":["/home/hanen/React/learnreact/src/components/Team.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport TeamMember from \"./TeamMember\";\nimport InfoMembers from \"./InfoMembers\";\n\nclass Team extends Component {\n  \n  constructor(){\n    super()\n    this.state = { \n                   info:InfoMembers\n    }\n   }\n   // lebut du mapping c de generaliser le code en cas davoir plusiers MAPS\n   // C'est une simple fct qui fait convertir une liste dinfo en une Map et la fait comme return\n   mapping(x){\n    const members = x.map(member => <TeamMember //member est un parametre qui represente chaque ligne dans la MAP\n    // C le principe des boucles     \n         key={member.id}\n         img={member.img}\n         name={member.name}\n         position={member.position}\n         phone={member.phone}\n         mail={member.email}\n         website={member.website}\n                                 />);\n           return members\n           }\n\n  render (){ \n    \n    \n    return(\n        <div className=\"row\">\n         \n       {this.mapping(this.state.info)}\n\n       </div>\n    );\n}}\nexport default Team ;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,SAASL,SAAS,CAAC;EAE3BM,WAAWA,CAAA,EAAE;IACX,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACEC,IAAI,EAACN;IACpB,CAAC;EACF;EACA;EACA;EACAO,OAAOA,CAACC,CAAC,EAAC;IACT,MAAMC,OAAO,GAAGD,CAAC,CAACE,GAAG,CAACC,MAAM,iBAAIT,OAAA,CAACH,UAAU,CAAC;IAC5C;IAAA;MAEKa,GAAG,EAAED,MAAM,CAACC,GAAI;MAChBC,IAAI,EAAEF,MAAM,CAACE,IAAK;MAClBC,QAAQ,EAAEH,MAAM,CAACG,QAAS;MAC1BC,KAAK,EAAEJ,MAAM,CAACI,KAAM;MACpBC,IAAI,EAAEL,MAAM,CAACM,KAAM;MACnBC,OAAO,EAAEP,MAAM,CAACO;IAAQ,GANnBP,MAAM,CAACQ,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOY,CAAC;IACzB,OAAOd,OAAO;EACd;EAETe,MAAMA,CAAA,EAAG;IAGP,oBACItB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAC,QAAA,EAEpB,IAAI,CAACnB,OAAO,CAAC,IAAI,CAACF,KAAK,CAACC,IAAI;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAExB;EAEb;AAAC;AACD,eAAepB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}